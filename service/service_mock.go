// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock_service is a generated GoMock package.
package service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// CreateTask mocks base method.
func (m *MockService) CreateTask(i interface{}) interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTask", i)
	ret0, _ := ret[0].(interface{})
	return ret0
}

// CreateTask indicates an expected call of CreateTask.
func (mr *MockServiceMockRecorder) CreateTask(i interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTask", reflect.TypeOf((*MockService)(nil).CreateTask), i)
}

// DeleteTask mocks base method.
func (m *MockService) DeleteTask(id string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteTask", id)
}

// DeleteTask indicates an expected call of DeleteTask.
func (mr *MockServiceMockRecorder) DeleteTask(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTask", reflect.TypeOf((*MockService)(nil).DeleteTask), id)
}

// FindTask mocks base method.
func (m *MockService) FindTask(id string) interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindTask", id)
	ret0, _ := ret[0].(interface{})
	return ret0
}

// FindTask indicates an expected call of FindTask.
func (mr *MockServiceMockRecorder) FindTask(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindTask", reflect.TypeOf((*MockService)(nil).FindTask), id)
}

// GetTasks mocks base method.
func (m *MockService) GetTasks() interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTasks")
	ret0, _ := ret[0].(interface{})
	return ret0
}

// GetTasks indicates an expected call of GetTasks.
func (mr *MockServiceMockRecorder) GetTasks() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTasks", reflect.TypeOf((*MockService)(nil).GetTasks))
}

// UpdateTask mocks base method.
func (m *MockService) UpdateTask(id string, i interface{}) interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateTask", id, i)
	ret0, _ := ret[0].(interface{})
	return ret0
}

// UpdateTask indicates an expected call of UpdateTask.
func (mr *MockServiceMockRecorder) UpdateTask(id, i interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTask", reflect.TypeOf((*MockService)(nil).UpdateTask), id, i)
}
